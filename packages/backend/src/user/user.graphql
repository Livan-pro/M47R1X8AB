input UserInput {
  email: String
  password: String
  passwordConfirmation: String
  firstName: String
  lastName: String
  phone: String
  vkId: String
  medicalInfo: String
}

input EditUserInput {
  firstName: String
  lastName: String
  phone: String
  vkId: String
  medicalInfo: String
}

input LoginInput {
  email: String!
  password: String!
  rememberMe: Boolean
}

input ChangePasswordInput {
  currentPassword: String!
  password: String!
  passwordConfirmation: String!
}

type User {
  email: String
  firstName: String
  lastName: String
  phone: String
  vkId: String
  medicalInfo: String
  characters: [Character]
  mainCharacter: Character
}

type Query {
  me: User
}

type Mutation {
  createUserWithCharacter(user: UserInput!, character: CharacterInput!): Boolean
  login(email: String!, password: String!, rememberMe: Boolean): String!
  logout: Boolean
  editUser(user: EditUserInput!): Boolean
  editCharacter(id: Int!, character: CharacterInput!): Boolean
  changePassword(data: ChangePasswordInput!): Boolean
}