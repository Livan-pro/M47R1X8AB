server {
	listen 80;
	listen [::]:80;
	server_name m47r1x8ab.tk www.m47r1x8ab.tk;

  location /.well-known/acme-challenge/ {
    root /var/www/certbot;
  }

	location / {
		return 301 https://m47r1x8ab.tk$request_uri;
	}
}

server {
  listen 443 ssl;
  listen [::]:443 ssl;
  server_name www.m47r1x8ab.tk;

	ssl_certificate /etc/letsencrypt/live/m47r1x8ab.tk/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/m47r1x8ab.tk/privkey.pem;
  include /etc/letsencrypt/options-ssl-nginx.conf;
  ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

	location / {
	  return 301 https://m47r1x8ab.tk$request_uri;
	}
}

server {
  listen 443 ssl;
  listen [::]:443 ssl;

  server_name m47r1x8ab.tk;

  ssl_certificate /etc/letsencrypt/live/m47r1x8ab.tk/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/m47r1x8ab.tk/privkey.pem;

  root /var/www/website;
  index index.html;

  location /graphql {
    proxy_pass http://matrix-backend:3001;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection 'upgrade';
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_cache_bypass $http_upgrade;
  }

  location / {
    try_files $uri $uri/ /index.html =404;
  }

  location ~* ^(?!\/api\/).*\.(?:ico|css|js|gif|jpe?g|png)$ {
    # Some basic cache-control for static files to be sent to the browser
    expires max;
    add_header Pragma public;
    add_header Cache-Control "public, must-revalidate, proxy-revalidate";
  }
}
